---
name: Daily monitoring for platform operations
#trigger:
#  - master
#pr:
#  - master
schedules:
  - cron: '0 8 * * Mon-Fri'
    displayName: Runs 9 AM Mon-Fri
    branches:
      include:
        - master
    always: 'true'

parameters:

  - name: ado_pipelines
    type: object
    default:
      - project: 'PlatformOperations'
        definitionId: '802'
        timeForAmber: '3 days'
        timeForRed: '5 days'
        pipelineName: "Preview Helm release cleanup - scheduled"
        branchName: "refs/heads/master"
      - project: 'PlatformOperations'
        definitionId: '768'
        timeForAmber: '3 days'
        timeForRed: '7 days'
        pipelineName: "ACR Cleanup"
        branchName: "refs/heads/master"
      - project: 'PlatformOperations'
        definitionId: '777'
        timeForAmber: '14 days'
        timeForRed: '28 days'
        pipelineName: "Launch Darkly cleanup"
        branchName: "refs/heads/master"
      - project: 'PlatformOperations'
        definitionId: '472'
        timeForAmber: '3 days'
        timeForRed: '7 days'
        pipelineName: "Azure AAD group cleanup"
        branchName: "refs/heads/master"
      - project: 'PlatformOperations'
        definitionId: '771'
        timeForAmber: '3 days'
        timeForRed: '7 days'
        pipelineName: "OWASP DB Update - Production"
        branchName: "refs/heads/master"
      - project: 'PlatformOperations'
        definitionId: '808'
        timeForAmber: '3 days'
        timeForRed: '7 days'
        pipelineName: "OWASP DB Update - Sandbox"
        branchName: "refs/heads/master"
      - project: 'PlatformOperations'
        definitionId: '772'
        timeForAmber: '3 days'
        timeForRed: '7 days'
        pipelineName: "ACR Base importer"
        branchName: "refs/heads/master"
      - project: 'PlatformOperations'
        definitionId: '759'
        timeForAmber: '3 days'
        timeForRed: '5 days'
        pipelineName: "Preview Helm release cleanup - PR close"
        branchName: "refs/heads/master"
      - project: 'PlatformOperations'
        definitionId: '635'
        timeForAmber: '1 days'
        timeForRed: '3 days'
        pipelineName: "hmcts.azure-enterprise"
        branchName: "refs/heads/main"
      - project: 'PlatformOperations'
        definitionId: '543'
        timeForAmber: '1 days'
        timeForRed: '3 days'
        pipelineName: "sds-azure-platform"
        branchName: "refs/heads/master"
      - project: 'PlatformOperations'
        definitionId: '765'
        timeForAmber: '1 days'
        timeForRed: '3 days'
        pipelineName: "azure-platform-terraform"
        branchName: "refs/heads/master"
  - name: aks_clusters
    type: object
    default:
      - resourceGroup: 'cft-preview-00-rg'
        clusterName: 'cft-preview-00-aks'
        subscription: 'DCD-CFTAPPS-DEV'
      - resourceGroup: 'cft-preview-01-rg'
        clusterName: 'cft-preview-01-aks'
        subscription: 'DCD-CFTAPPS-DEV'
  - name: certificates
    type: object
    default:
      - subscription_id: '8cbc6f36-7c56-4963-9d36-739db5d00b27'
        resource_group: 'lz-prod-rg'  
        front_door_name: 'hmcts-prod'
        min_cert_exp_days: '100'
      - subscription_id: '5ca62022-6aa2-4cee-aaa7-e7536c8d566c'
        resource_group: 'lz-prod-rg'  
        front_door_name: 'sdshmcts-prod'
        min_cert_exp_days: '100'
      - subscription_id: 'b72ab7b7-723f-4b18-b6f6-03b0f2c6a1bb'
        resource_group: 'lz-sbox-rg'  
        front_door_name: 'hmcts-sbox'
        min_cert_exp_days: '100'
      - subscription_id: '5ca62022-6aa2-4cee-aaa7-e7536c8d566c'
        resource_group: 'bau-bais_prod_network_rg'  
        front_door_name: 'hmcts-heritage-prod'
        min_cert_exp_days: '100'

variables:
  - name: SPSecretNumDays
    value: 14
  - name: service_connection
    value: dts-management-prod-intsvc

jobs:
  - job: DailyMonitoring
    timeoutInMinutes: 10
    pool:
      name: 'hmcts-cftptl-agent-pool'
    steps:
      - task: AzureKeyVault@1
        displayName: 'Get secrets from Keyvault'
        inputs:
          azureSubscription:  "DTS-CFTPTL-INTSVC"
          keyVaultName:   "cftptl-intsvc"
          secretsFilter: 'slack-webhook-url,azure-devops-token,jira-password,jira-username,github-management-api-token,jenkins-api-user,jenkins-api-token,service-now-username,service-now-password,launchdarkly-access-token'
      - task: Bash@3
        displayName: 'Create a slack message file'
        inputs:
          targetType: 'inline'
          script: |
           echo "*Daily Monitoring Summary* \n \n">> slack-message.txt
           echo "_:azure: *Scheduled Pipelines Status*_ \n">> slack-message.txt
      - ${{ each ado_pipeline in parameters.ado_pipelines }}:
        - task: Bash@3
          displayName: 'Checking azure pipeline status ${{ado_pipeline.pipelineName}}'
          inputs:
            targetType: filePath
            filePath: scripts/ado-pipeline-monitor.sh
            arguments: $(azure-devops-token) ${{ado_pipeline.project}} ${{ado_pipeline.definitionId}}  "${{ado_pipeline.timeForAmber}}"  "${{ado_pipeline.timeForRed}}"  "${{ado_pipeline.pipelineName}}" "${{ado_pipeline.branchName}}"
      - task: Bash@3
        displayName: 'Checking Github Licenses'
        inputs:
          targetType: filePath
          filePath: scripts/github-licenses.sh
          arguments: $(github-management-api-token)
      - task: Bash@3
        displayName: 'Checking Launchdarkly Licenses'
        inputs:
          targetType: filePath
          filePath: scripts/ld-license.sh
          arguments: $(launchdarkly-access-token)
      - task: Bash@3
        displayName: 'Checking servicenow status'
        inputs:
          targetType: filePath
          filePath: scripts/servicenow-status.sh
          arguments: $(service-now-username)  $(service-now-password)
      - task: Bash@3
        displayName: 'Checking Jenkins status'
        inputs:
          targetType: filePath
          filePath: scripts/jenkins-status.sh
          arguments: $(jenkins-api-user) $(jenkins-api-token) "http://jenkins.jenkins:8080/"
      - ${{ each cluster in parameters.aks_clusters }}:
        - task: AzureCLI@2
          displayName: 'Get AKS Cluster Status'
          inputs:
            scriptType: bash
            scriptPath: scripts/aks-node-count.sh
            azureSubscription: ${{ cluster.subscription }}
            arguments: ${{cluster.resourceGroup}} ${{cluster.clusterName}}
      - task: Bash@3
        displayName: 'Expiring SSL certificates header'
        inputs:
          targetType: 'inline'
          script: |
           echo "\n:ssl-cert: _*Expiring SSL Certificates*_\n\n" >> slack-message.txt
      - ${{ each frontdoor in parameters.certificates }}:
        - task: AzureCLI@2
          displayName: 'Checking Certificate status'
          inputs:
            scriptType: bash
            scriptPath: scripts/cert-check.sh
            azureSubscription: ${{ frontdoor.subscription_id }}
            arguments: ${{ frontdoor.subscription_id }} ${{ frontdoor.resource_group }} ${{ frontdoor.front_door_name }} ${{ frontdoor.min_cert_exp_days }} 
      - task: AzureCLI@2
        displayName: 'Service Principal Check'
        inputs:
          scriptType: bash
          scriptPath: scripts/service-principals.sh
          azureSubscription: ${{ variables.service_connection }}
          arguments: ${{ variables.SPSecretNumDays }}
      - task: Bash@3
        displayName: 'Checking JIRA status'
        inputs:
          targetType: filePath
          filePath: scripts/jira-status.sh
          arguments: $(jira-username) $(jira-password)
      - task: Bash@3
        displayName: 'Send slack message'
        inputs:
          targetType: filePath
          filePath: scripts/send-slack-message.sh
          arguments: $(slack-webhook-url) test-cert-expiry
